

--- A mettre sur le git ---
-> Notebooks explications de la démarche 
-> Readme (resultats avec les temps de calcul et la machine, 
	installations à faire pour reproduire le code, 
	ligne de commandes pour reproduire les résultats)
-> Dossier data avec les forecasts arpège et arome 
-> Dossier utils avec les fichiers.py: pre_processing / features_engineering / 
-> Un train.py à run en ligne de commande
-> PDF du rapport
-> Fichier requirements.txt (cf module pipreqs pour génération automatique)
----------------------------

--- Structure du code ---
# Définition des arguments avec argparse

# Fonctions utiles 
	-> traitement sur df test: moyenne / somme des variables sur les jours / création Id / création day_index / traitement des nan
	-> load datasets forecast 
	-> calculs de la matrice de distance
	-> calculs d'interpolation des prévisions
	-> ajouter au df_test les prévisions
	-> load modèle de prédiction + params optimaux
		


# main 
	-> load dataset test
	-> pré-traitement: nan, moyenne, forecast, etc
	-> chargement modèle pré-entrainé
	-> prédiction 
	-> création datframe |Id|Prédiction| 
	-> export résultat en csv
---------------------------------


















